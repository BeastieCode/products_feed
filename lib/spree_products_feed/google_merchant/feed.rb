module SpreeProductsFeed::GoogleMerchant
  class Feed

    def initialize(variants, options={})
      @variants = variants

      @options = {
        currency: Spree::Config[:currency],
        country: Spree::Country.find(Spree::Config[:default_country_id]),
        title: 'Google Merchant feed',
        description: 'Google Merchant feed generated by Spree',
        link: Spree::Store.default.url,
        google_category: 'Software > Digital Goods & Currency',
        target: STDOUT
      }.merge(options)
    end

    def generate
      # TODO: change target
      xml = Builder::XmlMarkup.new target: @options[:target]
      xml.instruct! :xml, version: '1.0'

      xml.rss(version: '2.0', 'xmlns:g' => 'http://base.google.com/ns/1.0') do
        xml.channel do
          xml.title @options[:title]
          xml.description @options[:description]
          xml.link @options[:link]

          @variants.each do |variation|
            xml.item do
              xml.tag! 'g:brand', variation.name.titleize
              xml.tag! 'g:id', "#{variation.product.id}-#{variation.id}"
              xml.tag! 'g:mpn', variation.product.name
              xml.tag! 'g:item_group_id', variation.product.id
              xml.title variation.name.titleize
              xml.description CGI.escapeHTML(variation.product.description.try(:downcase))
              xml.tag! 'g:google_product_category', @options[:google_category]
              xml.tag! 'g:product_type', variation.product.taxons.first.name
              xml.link  Spree::Core::Engine.routes.url_helpers.product_url(variation.product, host: 'example.com')
              xml.tag! 'g:image_link', 'http://favva.nculo/stocazz.png'
              xml.tag! 'g:condition', 'new'
              xml.tag! 'g:availability', true
              xml.tag! 'g:price', Spree::Money.new(variation.price, currency: @options[:currency], symbol_before_without_space: false)
            end
          end
        end
      end
    end
  end
end
