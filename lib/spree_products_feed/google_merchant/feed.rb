module SpreeProductsFeed::GoogleMerchant
  class Feed

    def initialize(variants, options={})
      @variants = variants

      @options = {
        currency: Spree::Config[:currency],
        country: Spree::Country.find(Spree::Config[:default_country_id]),
        title: 'Google Merchant feed',
        description: 'Google Merchant feed generated by Spree',
        link: root_url,
        google_category: 'Software > Digital Goods & Currency'
      }.merge(options)
    end

    def generate
      # TODO: change target
      xml = Builder::XmlMarkup.new target: STDOUT
      xml.instruct! :xml, version: '1.0'

      xml.rss(version: '2.0', 'xmlns:g' => 'http://base.google.com/ns/1.0') do
        xml.channel do
          xml.title @options[:title]
          xml.description @options[:description]
          xml.link @options[:link]

          @variants.each do |variation|
            xml.item do
              xml.tag! 'g:brand', variation.product.designer.name.titleize
              xml.tag! 'g:id', "#{variation.product.id}-#{variation.id}"
              xml.tag! 'g:mpn', variation.product.name
              xml.tag! 'g:item_group_id', variation.product.id
              xml.title variation.product.designer.name.titleize # { variation.product.color }" #{ variation.options_text }"
              xml.description CGI.escapeHTML(variation.product.description.try(:downcase))
              xml.tag! 'g:google_product_category', @options[:google_category]
              xml.tag! 'g:product_type', variation.product.category.name
              xml.link product_url(variation.product)
              xml.tag! 'g:image_link', variation.product.main_image
              xml.tag! 'g:condition', 'new'
              xml.tag! 'g:availability', true
              xml.tag! 'g:price', Spree::Money.new(variation.price, currency: @options[:currency], symbol_before_without_space: false).to_rss

              # TODO: find / manage multiple shippings
              variation.shippings.each do |shipping|
                xml.tag! "g:shipping" do
                  xml.tag! 'g:country', @options[:country].iso
                  xml.tag! 'g:service', 'Standard'
                  xml.tag! 'g:price', "0 #{ @options[:currency] }"
                end
              end

              # TODO: find / manage multiple tax rates
              variation.taxes.each do |tax|
                xml.tag! "g:tax" do
                  xml.tag! "g:country", tax
                  xml.tag! "g:region", tax
                  xml.tag! "g:rate", tax
                  xml.tag! "g:tax_ship", tax
                end
              end
            end
          end
        end
      end
    end
  end
end
