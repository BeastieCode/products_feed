require 'spec_helper'

describe ProductsFeed::GoogleMerchant::Feed do
  let(:buffer) { StringIO.new }
  let(:items) {[
    {
      id: '1234',
      name: 'My awesome product',
      description: 'My awesome product',
      brand: 'Sex Toys Inc.',
      gtin: 'abc123',
      mpn: 'def123',
      price: 12.50,
      link: 'http://example.com/products/123',
      image_link: 'http://favva.nculo/stocazz.png',
    }
  ]}
  let(:options) {
    {
      title: 'Google Merchant feed',
      description: 'Google Merchant feed generated by Spree',
      link: 'http://example.com'
    }
  }
  let(:google_merchant) {
    ProductsFeed::GoogleMerchant::Feed.new(items, buffer, options)
  }

  describe '#initialize' do
    it 'initializes a new GoogleMerchant::Feed' do
      expect(google_merchant).to be_a(ProductsFeed::GoogleMerchant::Feed)
    end
  end

  describe '#generate' do
    let(:subject) { buffer.rewind && buffer.read }

    before do
      google_merchant.generate do |xml, item|
        #Â mandatory fields
        xml.field 'g:id', item[:id]
        xml.field 'g:title', item[:name]
        xml.field 'g:description', item[:description]
        xml.field 'g:link', item[:link]
        xml.field 'g:image_link', item[:image_link]
        xml.field 'g:condition', 'new' # 'new' 'used' 'refurbished'
        xml.field 'g:availability', 'in stock' #'in stock' 'out of stock' 'preorder'
        xml.field 'g:price', "#{item[:price]} USD"
        xml.field 'g:brand', item[:brand] # Brand of the item
        xml.field 'g:gtin', item[:gtin] # Global Trade Item Numbers
        xml.field 'g:mpn', item[:mpn] # Manufacturer Part Number

        # optional fields
        xml.field 'g:item_group_id', 'GROUP_ID'
        xml.field 'g:google_product_category', 'Software > Digital Goods & Currency'
        xml.field 'g:product_type', 'PRODUCT_TYPE'
      end

      subject
    end

    it 'generates a Google Merchant feed' do
      puts subject
      is_expected.to_not be_empty
    end

    context 'it generates correct Google Merchant XML markup' do
      let(:item) { items.first }

      it { is_expected.to have_xml 'title', options[:title] }
      it { is_expected.to have_xml 'description', options[:description] }
      it { is_expected.to have_xml 'link', options[:link] }

      it { is_expected.to have_xml 'item > g|id', item[:id] }
      it { is_expected.to have_xml 'item > g|title', item[:title] }
      it { is_expected.to have_xml 'item > g|description', item[:description] }
      it { is_expected.to have_xml 'item > g|link', item[:link] }
      it { is_expected.to have_xml 'item > g|image_link', item[:image_link] }
      it { is_expected.to have_xml 'item > g|condition', item[:condition] }
      it { is_expected.to have_xml 'item > g|availability', item[:availability] }
      it { is_expected.to have_xml 'item > g|price', "#{item[:price]} USD" }
      it { is_expected.to have_xml 'item > g|brand', item[:brand] }
      it { is_expected.to have_xml 'item > g|gtin', item[:gtin] }
      it { is_expected.to have_xml 'item > g|mpn', item[:mpn] }
      it { is_expected.to have_xml 'item > g|item_group_id', 'GROUP_ID' }
      it { is_expected.to have_xml 'item > g|product_type', 'PRODUCT_TYPE' }

    end
  end
end

#
# <?xml version="1.0" encoding="UTF-8"?>
# <rss xmlns:g="http://base.google.com/ns/1.0" version="2.0">
#   <channel>
#     <title>Google Merchant feed</title>
#     <description>Google Merchant feed generated by Spree</description>
#     <link>http://example.com</link>
#     <item>
#       <g:id>1234</g:id>
#       <g:title>My awesome product</g:title>
#       <g:description>My awesome product</g:description>
#       <g:link>http://example.com/products/123</g:link>
#       <g:image_link>http://favva.nculo/stocazz.png</g:image_link>
#       <g:condition>new</g:condition>
#       <g:availability>in stock</g:availability>
#       <g:price>12.5 USD</g:price>
#       <g:brand>Sex Toys Inc.</g:brand>
#       <g:gtin>abc123</g:gtin>
#       <g:mpn>def123</g:mpn>
#       <g:item_group_id>some group id</g:item_group_id>
#       <g:google_product_category>Software &gt; Digital Goods &amp; Currency</g:google_product_category>
#       <g:product_type>some product type</g:product_type>
#     </item>
#   </channel>
# </rss>
